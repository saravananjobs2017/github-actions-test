# name: Jira Webhook Trigger

# on:
#   # repository_dispatch:
#   #   types: do-something
#   workflow_dispatch:

# jobs:
#   jira_trigger_job:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#       - name: Print variables
#         run: |
#          echo ${{ github.event.client_payload.jira_issue_key }}
#          echo ${{ github.event.client_payload.jira_assignee }}

name: Triggered from Jira

on:
 workflow_dispatch:
  # repository_dispatch:
  #   types: do-something # Ensure this matches `event_type` in Jira
  
    
jobs:
  process_jira_data:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      # - name: Print Full Payload
      #   run: echo "${{ toJson(github.event.client_payload) }}"

      # - name: Print Issue Key
      #   run: echo "Issue Key=${{ github.event.client_payload.issueKey }}"

      # - name: Print Summary
      #   run: echo "Summary=${{ github.event.client_payload.summary }}"

      # - name: Print env values
      #   run: cat $GITHUB_ENV

      # - name: Print Custom Field
      #   run: echo "snow_chg_id:" ${{ github.event.client_payload.snow_chg_id }}

      # - name: Print assignee
      #   run: echo "Assignee:" ${{ github.event.client_payload.assignee }}

      # - name: Print description
      #   run: echo "Description:" ${{ github.event.client_payload.description }}

      - name: Update charm id in jira
        shell: bash
        # env:
        #   ISSUE_KEY: "TESTING-18"
        #   CHARM_ID: "1234567"  # Set CHARM_ID directly
        run: |
           response_code=$(curl -o /dev/null -s -w "%{http_code}" -X PUT \
             -u "${{secrets.JIRA_API_USER}}:${{secrets.JIRA_API_TOKEN}}" \
             -H "Content-Type: application/json" \
             -d '{
                   "fields": {
                     "customfield_10440": "'"123456"'"
                   }
                 }' \
             "https://eqn-nextgen.atlassian.net/rest/api/3/issue/TESTING-18")
           if [ "$response_code" -eq 200 ] || [ "$response_code" -eq 204 ]; 
           then
             echo "Success: The request was successful with status code $response_code."
           else
             echo "Error: The request failed with status code $response_code"
             exit 1
           fi
